{"version":3,"sources":["components/CurrencyDropdown.tsx","components/CurrencyConverter.tsx","themes/default.theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CurrencyDropdown","_ref","defaultCurrency","selectedCurrency","currencies","code","icon","_jsx","AU","CA","CH","EU","GB","HK","JP","KR","NZ","US","Select","variant","value","sx","width","onChange","event","target","children","map","_ref2","MenuItem","_jsxs","Stack","direction","spacing","justifyContent","alignItems","Box","display","Typography","fontSize","fontWeight","CurrencyConverter","_React$useState","React","useState","_React$useState2","_slicedToArray","buyAmount","setBuyAmount","_React$useState3","_React$useState4","sellAmount","setSellAmount","_React$useState5","_React$useState6","buyCurrency","setBuyCurrency","_React$useState7","_React$useState8","sellCurrency","setSellCurrency","currencyDataLibrary","useRef","useEffect","getAndSetNewSellAmount","fetchCurrency","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currency","response","data","wrap","_context","prev","next","toLowerCase","current","abrupt","fetch","concat","sent","json","stop","_x","apply","arguments","getAndSetNewBuyAmount","_callee2","buyToSellRatio","_context2","_x2","_x3","_x4","_ref3","_callee3","_context3","_x5","_x6","_x7","handleBuyAmountChange","_ref4","_callee4","newBuyAmount","_context4","valueAsNumber","_x8","handleBuyCurrencyChange","_ref5","_callee5","_context5","_x9","handleSellCurrencyChange","_ref6","_callee6","_context6","_x10","Card","padding","CardContent","TextField","type","Number","toFixed","inputProps","min","style","textAlign","CurrencyExchangeIcon","cursor","color","onClick","currentBuyCurrency","currentSellCurrency","newSellAmount","palette","primary","main","secondary","font","title","error","warning","sky","info","success","typography","fontFamily","fontWeightRegular","h1","h3","letterSpacing","components","MuiCard","styleOverrides","root","boxShadow","borderRadius","MuiSelect","borderBottom","select","minHeight","backgroundColor","MuiInputBase","input","MuiInput","transition","mdTheme","createTheme","App","ThemeProvider","theme","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.24297cd9.chunk.js","sourcesContent":["import { Box, MenuItem, Select, SelectChangeEvent, Stack, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { AU, CA, CH, EU, GB, HK, JP, KR, NZ, US } from 'country-flag-icons/react/3x2'\r\n\r\ninterface CurrencyDropdownProps {\r\n    defaultCurrency: string;\r\n    selectedCurrency: (currency: string) => void;\r\n}\r\n\r\nexport default function CurrencyDropdown({\r\n    defaultCurrency,\r\n    selectedCurrency,\r\n}: CurrencyDropdownProps) {\r\n    const currencies = [\r\n        {\r\n            code: \"AUD\",\r\n            icon: <AU />,\r\n        },\r\n        {\r\n            code: \"CAD\",\r\n            icon: <CA />,\r\n        },\r\n        {\r\n            code: \"CHF\",\r\n            icon: <CH />,\r\n        },\r\n        {\r\n            code: \"EUR\",\r\n            icon: <EU />,\r\n        },\r\n        {\r\n            code: \"GBP\",\r\n            icon: <GB />,\r\n        },\r\n        {\r\n            code: \"HKD\",\r\n            icon: <HK />,\r\n        },\r\n        {\r\n            code: \"JPY\",\r\n            icon: <JP />,\r\n        },\r\n        {\r\n            code: \"KRW\",\r\n            icon: <KR />,\r\n        },\r\n        {\r\n            code: \"NZD\",\r\n            icon: <NZ />,\r\n        },\r\n        {\r\n            code: \"USD\",\r\n            icon: <US />,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Select\r\n            variant=\"standard\"\r\n            value={defaultCurrency}\r\n            sx={{ width: \"100px\" }}\r\n            onChange={(event: SelectChangeEvent) => {\r\n                selectedCurrency(event.target.value);\r\n            }}\r\n        >\r\n            {currencies.map(({ code, icon }) => (\r\n                <MenuItem value={code}>\r\n                    <Stack direction=\"row\" spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Box sx={{ display: \"flex\", width: \"20px\" }}>\r\n                            {icon}\r\n                        </Box>\r\n                        <Typography fontSize=\"16px\" fontWeight=\"600\">{code}</Typography>\r\n                    </Stack>\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    );\r\n}","import { Box, Card, CardContent, Stack, TextField, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CurrencyDropdown from \"./CurrencyDropdown\";\r\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\r\n\r\nexport default function CurrencyConverter() {\r\n    const [buyAmount, setBuyAmount] = React.useState<number>(1000);\r\n    const [sellAmount, setSellAmount] = React.useState<number>(0);\r\n    const [buyCurrency, setBuyCurrency] = React.useState<string>(\"GBP\");\r\n    const [sellCurrency, setSellCurrency] = React.useState<string>(\"USD\");\r\n    const currencyDataLibrary = React.useRef<{[key: string]: {[key: string]: number}}>({});\r\n\r\n    React.useEffect(() => {\r\n        getAndSetNewSellAmount(buyCurrency, sellCurrency, buyAmount);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchCurrency = async (currency: string) => {\r\n        currency = currency.toLowerCase();\r\n\r\n        if (currencyDataLibrary.current[currency]) {\r\n            return currencyDataLibrary.current[currency];\r\n        }\r\n\r\n        const response = await fetch(`https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${currency}.json`);\r\n        const data = await response.json();\r\n\r\n        currencyDataLibrary.current[currency] = data[currency];\r\n        return data[currency];\r\n    };\r\n\r\n    const getAndSetNewBuyAmount = async(buyCurrency: string, sellCurrency: string, sellAmount: number) => {\r\n        const response = await fetchCurrency(buyCurrency);\r\n        const buyToSellRatio = response?.[sellCurrency.toLowerCase()];\r\n        const newBuyAmount = buyToSellRatio ? sellAmount / buyToSellRatio : 0;\r\n        setBuyAmount(newBuyAmount);\r\n    };\r\n\r\n    const getAndSetNewSellAmount = async(buyCurrency: string, sellCurrency: string, buyAmount: number) => {\r\n        const response = await fetchCurrency(buyCurrency);\r\n        const buyToSellRatio = response?.[sellCurrency.toLowerCase()];\r\n        const newSellAmount = buyToSellRatio ? buyAmount * buyToSellRatio : 0;\r\n        setSellAmount(newSellAmount);\r\n    };\r\n\r\n    const handleBuyAmountChange = async(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newBuyAmount = event.target.valueAsNumber;\r\n        setBuyAmount(newBuyAmount);\r\n        getAndSetNewSellAmount(buyCurrency, sellCurrency, newBuyAmount);\r\n    };\r\n\r\n    const handleSellAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newSellAmount = event.target.valueAsNumber;\r\n        setSellAmount(newSellAmount);\r\n        getAndSetNewBuyAmount(buyCurrency, sellCurrency, newSellAmount);\r\n    };\r\n\r\n    const handleBuyCurrencyChange = async(currency: string) => {\r\n        setBuyCurrency(currency);\r\n        getAndSetNewSellAmount(currency, sellCurrency, buyAmount);\r\n    };\r\n\r\n    const handleSellCurrencyChange = async(currency: string) => {\r\n        setSellCurrency(currency);\r\n        getAndSetNewBuyAmount(buyCurrency, currency, sellAmount);\r\n    };\r\n\r\n    const switchCurrency = () => {\r\n        const currentBuyCurrency = buyCurrency;\r\n        const currentSellCurrency = sellCurrency;\r\n        setBuyCurrency(currentSellCurrency);\r\n        setSellCurrency(currentBuyCurrency);\r\n        getAndSetNewSellAmount(currentSellCurrency, currentBuyCurrency, buyAmount);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h1\">Currency Converter</Typography>\r\n            <Card sx={{ width: \"550px\", padding: \"30px 0\" }}>\r\n                <CardContent>\r\n                    <Stack direction=\"row\" spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Stack spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"h3\">Buy</Typography>\r\n                            <TextField \r\n                                variant=\"standard\" \r\n                                type=\"number\"\r\n                                value={Number(buyAmount.toFixed(2))} \r\n                                inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                onChange={handleBuyAmountChange} \r\n                            />\r\n                            <CurrencyDropdown defaultCurrency={buyCurrency} selectedCurrency={handleBuyCurrencyChange} />\r\n                        </Stack>\r\n                        <CurrencyExchangeIcon \r\n                            sx={{ \r\n                                cursor: \"pointer\",\r\n                                color: \"#9b9aba\", \r\n                                fontSize: \"28px\", \r\n                                \":hover\": {\r\n                                    color: \"#884ffb\",\r\n                                } \r\n                            }}\r\n                            onClick={switchCurrency} \r\n                        />\r\n                        <Stack spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"h3\">Sell</Typography>\r\n                            <TextField \r\n                                variant=\"standard\" \r\n                                type=\"number\"\r\n                                value={Number(sellAmount.toFixed(2))} \r\n                                inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                onChange={handleSellAmountChange} \r\n                            />\r\n                            <CurrencyDropdown defaultCurrency={sellCurrency} selectedCurrency={handleSellCurrencyChange} />\r\n                        </Stack>\r\n                    </Stack>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}","import { createTheme } from \"@mui/material\";\r\n\r\nconst palette = {\r\n    primary: {\r\n        main: \"#884ffb\",\r\n    },\r\n    secondary: {\r\n        main: \"#F4F9FF\",\r\n    },\r\n    font: {\r\n        primary: \"#9b9aba\",\r\n        title: \"#474d58\",\r\n        error: \"#FFF1EE\",\r\n        warning: \"#FEF5C5\",\r\n        sky: \"#F2F5F6\",\r\n        info: \"#ECF5FD\",\r\n        success: \"#E6F9E7\",\r\n    },\r\n};\r\n\r\nconst typography = {\r\n    color: palette.font.primary,\r\n    fontFamily: \"Mulish\",\r\n    fontWeightRegular: 500,\r\n    fontWeight: \"regular\",\r\n    h1: {\r\n        fontSize: \"22px\",\r\n        fontWeight: 600,\r\n        color: palette.font.title,\r\n    },\r\n    h3: {\r\n        fontSize: \"16px\",\r\n        fontWeight: 500,\r\n        color: palette.font.primary,\r\n        letterSpacing: \"0.5px\"\r\n    },\r\n};\r\n\r\nconst components = {\r\n    MuiCard: {\r\n        styleOverrides: {\r\n            root: {\r\n                boxShadow: \"none\",\r\n                borderRadius: \"16px\",\r\n            }\r\n        }\r\n    },\r\n    MuiSelect: {\r\n        styleOverrides: {\r\n            root: {\r\n                color: palette.font.title,\r\n                \":hover:not(.Mui-disabled, .Mui-error):before\": {\r\n                    borderBottom: 0,\r\n                },\r\n                \":before, :after\": {\r\n                    borderBottom: 0,\r\n                },\r\n            },\r\n            select: {\r\n                minHeight: 0,\r\n                \":focus\": {\r\n                    backgroundColor: \"transparent\",\r\n                },\r\n            },\r\n        }\r\n    },\r\n    MuiInputBase: {\r\n        styleOverrides: {\r\n            input: {\r\n                fontSize: \"30px\",\r\n                width: \"150px\",\r\n            },\r\n        },\r\n    },\r\n    MuiInput: {\r\n        styleOverrides: {\r\n            root: {\r\n                color: palette.font.title,\r\n                \":hover:not(.Mui-disabled, .Mui-error):before\": {\r\n                    borderBottom: \"2px dashed rgba(136, 79, 251, 0.7)\",\r\n                },\r\n                \":before\": {\r\n                    borderBottom: `2px dashed ${palette.font.primary}`,\r\n                },\r\n                \":after\": {\r\n                    borderBottom: \"2px dashed rgba(136, 79, 251, 0.7)\",\r\n                    transition: \"none\",\r\n                },\r\n                \":focus, :focus-within, :active, :target\": {\r\n                    color: palette.primary.main,\r\n                },\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport const mdTheme = createTheme({\r\n    palette,\r\n    typography,\r\n    components,\r\n});\r\n","import React from 'react';\nimport { Container, ThemeProvider } from '@mui/material';\nimport CurrencyConverter from './components/CurrencyConverter';\nimport { mdTheme } from './themes/default.theme';\n\nfunction App() {\n    return (\n        <ThemeProvider theme={mdTheme}>\n            <Container maxWidth=\"sm\">\n                <CurrencyConverter />\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}