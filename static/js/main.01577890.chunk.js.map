{"version":3,"sources":["components/CurrencyDropdown.tsx","components/CurrencyConverter.tsx","themes/default.theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CurrencyDropdown","_ref","defaultCurrency","selectedCurrency","currencies","code","icon","React","createElement","AU","CA","CH","CN","EU","GB","HK","JP","NZ","US","Select","variant","value","onChange","event","target","map","_ref2","MenuItem","Stack","direction","spacing","justifyContent","alignItems","Box","sx","display","width","Typography","fontSize","CurrencyConverter","_React$useState","useState","_React$useState2","_slicedToArray","buyAmount","setBuyAmount","_React$useState3","_React$useState4","_React$useState5","_React$useState6","buyCurrency","setBuyCurrency","_React$useState7","_React$useState8","Card","minWidth","CardContent","TextField","type","inputProps","min","style","textAlign","valueAsNumber","currency","CurrencyExchangeIcon","palette","primary","main","secondary","font","white","error","warning","sky","info","success","typography","color","fontFamily","fontWeightRegular","fontWeight","h1","h2","mdTheme","createTheme","components","MuiSelect","styleOverrides","root",":hover:not(.Mui-disabled, .Mui-error):before","borderBottom",":before, :after","select","minHeight",":focus","backgroundColor","MuiInputBase","input","MuiInput",":before","App","ThemeProvider","theme","Container","maxWidth","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.01577890.chunk.js","sourcesContent":["import { Box, FormControl, MenuItem, Select, SelectChangeEvent, Stack, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { AU, CA, CH, CN, EU, GB, HK, JP, NZ, US } from 'country-flag-icons/react/3x2'\r\n\r\ninterface CurrencyDropdownProps {\r\n    defaultCurrency: string;\r\n    selectedCurrency: (currency: string) => void;\r\n}\r\n\r\nexport default function CurrencyDropdown({\r\n    defaultCurrency,\r\n    selectedCurrency,\r\n}: CurrencyDropdownProps) {\r\n    const currencies = [\r\n        {\r\n            code: \"AUD\",\r\n            icon: <AU />,\r\n        },\r\n        {\r\n            code: \"CAD\",\r\n            icon: <CA />,\r\n        },\r\n        {\r\n            code: \"CHF\",\r\n            icon: <CH />,\r\n        },\r\n        {\r\n            code: \"CNH\",\r\n            icon: <CN />,\r\n        },\r\n        {\r\n            code: \"EUR\",\r\n            icon: <EU />,\r\n        },\r\n        {\r\n            code: \"GBP\",\r\n            icon: <GB />,\r\n        },\r\n        {\r\n            code: \"HKD\",\r\n            icon: <HK />,\r\n        },\r\n        {\r\n            code: \"JPY\",\r\n            icon: <JP />,\r\n        },\r\n        {\r\n            code: \"NZD\",\r\n            icon: <NZ />,\r\n        },\r\n        {\r\n            code: \"USD\",\r\n            icon: <US />,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Select\r\n            variant=\"standard\"\r\n            value={defaultCurrency}\r\n            onChange={(event: SelectChangeEvent) => {\r\n                selectedCurrency(event.target.value);\r\n            }}\r\n        >\r\n            {currencies.map(({ code, icon }) => (\r\n                <MenuItem value={code}>\r\n                    <Stack direction=\"row\" spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Box sx={{ display: \"flex\", width: \"24px\" }}>\r\n                            {icon}\r\n                        </Box>\r\n                        <Typography fontSize=\"20px\">{code}</Typography>\r\n                    </Stack>\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    );\r\n}","import { Box, Card, CardContent, Stack, TextField, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CurrencyDropdown from \"./CurrencyDropdown\";\r\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\r\n\r\nexport default function CurrencyConverter() {\r\n    const [buyAmount, setBuyAmount] = React.useState<number>(1);\r\n    const [sellAmount, setSellAmount] = React.useState<number>();\r\n    const [buyCurrency, setBuyCurrency] = React.useState<string>(\"GBP\");\r\n    const [sellCurrency, setSellCurrency] = React.useState<string>();\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h1\">Currenvy Converter</Typography>\r\n            <Card sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n                    <Stack direction=\"row\" spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Stack spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Typography>Buy</Typography>\r\n                            <TextField \r\n                                variant=\"standard\" \r\n                                type=\"number\"\r\n                                value={buyAmount} \r\n                                inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n                                    setBuyAmount(event.target.valueAsNumber)\r\n                                } \r\n                            />\r\n                            <CurrencyDropdown defaultCurrency={buyCurrency} selectedCurrency={(currency) => {setBuyCurrency(currency)}} />\r\n                        </Stack>\r\n                        <CurrencyExchangeIcon />\r\n                        <Box>Item 3</Box>\r\n                    </Stack>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}","import { createTheme } from \"@mui/material\";\r\n\r\nconst palette = {\r\n    primary: {\r\n        main: \"#2881ff\",\r\n    },\r\n    secondary: {\r\n        main: \"#f4f9ff\",\r\n    },\r\n    font: {\r\n        primary: \"#c0b9cb\",\r\n        white: \"#FFFFFF\",\r\n        error: \"#FFF1EE\",\r\n        warning: \"#FEF5C5\",\r\n        sky: \"#F2F5F6\",\r\n        info: \"#ECF5FD\",\r\n        success: \"#E6F9E7\",\r\n    },\r\n};\r\n\r\nconst typography = {\r\n    color: palette.font.primary,\r\n    fontFamily: \"Arimo\",\r\n    fontWeightRegular: 500,\r\n    fontWeight: \"regular\",\r\n    h1: {\r\n        fontSize: \"2rem\",\r\n        fontWeight: 500,\r\n        color: palette.primary.main,\r\n    },\r\n    h2: {\r\n        fontSize: \"1.5rem\",\r\n        fontWeight: 500,\r\n        color: palette.primary.main,\r\n    },\r\n};\r\n\r\nconst components = {\r\n    MuiSelect: {\r\n        styleOverrides: {\r\n            root: {\r\n                \":hover:not(.Mui-disabled, .Mui-error):before\": {\r\n                    borderBottom: 0,\r\n                },\r\n                \":before, :after\": {\r\n                    borderBottom: 0,\r\n                },\r\n            },\r\n            select: {\r\n                minHeight: 0,\r\n                \":focus\": {\r\n                    backgroundColor: \"transparent\",\r\n                },\r\n            },\r\n        }\r\n    },\r\n    MuiInputBase: {\r\n        styleOverrides: {\r\n            input: {\r\n                fontSize: \"30px\",\r\n                width: \"180px\",\r\n            },\r\n        },\r\n    },\r\n    MuiInput: {\r\n        styleOverrides: {\r\n            root: {\r\n                // \":hover:not(.Mui-disabled, .Mui-error):before\": {\r\n                //     borderBottom: 0,\r\n                // },\r\n                \":before\": {\r\n                    borderBottom: \"2px dashed rgba(0, 0, 0, 0.42)\",\r\n                },\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport const mdTheme = createTheme({\r\n    palette,\r\n    typography,\r\n    components,\r\n});\r\n","import React from 'react';\nimport { Container, ThemeProvider } from '@mui/material';\nimport CurrencyConverter from './components/CurrencyConverter';\nimport { mdTheme } from './themes/default.theme';\n\nfunction App() {\n    return (\n        <ThemeProvider theme={mdTheme}>\n            <Container maxWidth=\"sm\">\n                <CurrencyConverter />\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}